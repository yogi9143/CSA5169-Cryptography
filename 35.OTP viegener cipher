
#include <stdio.h>
#include <string.h>
#include <ctype.h>

void generateKey(const char *plaintext, const char *key, char *extendedKey) {
    int textLength = strlen(plaintext);
    int keyLength = strlen(key);

    for (int i = 0, j = 0; i < textLength; ++i) {
        if (isalpha(plaintext[i])) {
            extendedKey[i] = key[j % keyLength];
            j++;
        } else {
            extendedKey[i] = plaintext[i];
        }
    }
    extendedKey[textLength] = '\0';
}

void encrypt(const char *plaintext, const char *key, char *ciphertext) {
    char extendedKey[100];
    generateKey(plaintext, key, extendedKey);

    for (int i = 0; plaintext[i] != '\0'; ++i) {
        if (isalpha(plaintext[i])) {
            int shift = toupper(extendedKey[i]) - 'A';
            if (isupper(plaintext[i])) {
                ciphertext[i] = ((plaintext[i] - 'A' + shift) % 26) + 'A';
            } else {
                ciphertext[i] = ((plaintext[i] - 'a' + shift) % 26) + 'a';
            }
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}

int main() {
    char plaintext[100], key[100], ciphertext[100];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';

    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = '\0';

    encrypt(plaintext, key, ciphertext);

    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
output :
Enter the plaintext: meghana chowdary
Enter the key: aadhya
Ciphertext: mejoyna ckvudarb
