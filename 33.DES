
#include <stdio.h>
#include <stdint.h>
void initialPermutation(uint64_t *data) {
}
void finalPermutation(uint64_t *data) {
}

void generateSubkeys(uint64_t *key, uint64_t subkeys[16]) {
}
void feistelNetwork(uint32_t *left, uint32_t *right, uint64_t subkey) {
}
void desEncrypt(uint64_t plaintext, uint64_t key, uint64_t *ciphertext) {
    uint64_t subkeys[16];
    generateSubkeys(&key, subkeys);
    initialPermutation(&plaintext);
    uint32_t left = (uint32_t)(plaintext >> 32);
    uint32_t right = (uint32_t)(plaintext & 0xFFFFFFFF);
    for (int round = 0; round < 16; round++) {
        feistelNetwork(&left, &right, subkeys[round]);
    }
    *ciphertext = ((uint64_t)right << 32) | (uint64_t)left;   
    finalPermutation(ciphertext);
}
int main() {
    uint64_t plaintext, key, ciphertext;
    printf("Enter 64-bit plaintext (in hexadecimal): ");
    scanf("%llx", &plaintext);
    printf("Enter 64-bit key (in hexadecimal): ");
    scanf("%llx", &key);
    desEncrypt(plaintext, key, &ciphertext);
    printf("Plaintext: 0x%016llX\n", plaintext);
    printf("Ciphertext: 0x%016llX\n", ciphertext);   
    return 0;
}
output :
Enter 64-bit plaintext (in hexadecimal): 234
Enter 64-bit key (in hexadecimal): 4
Plaintext: 0x0000000000000234
Ciphertext: 0x0000023400000000
